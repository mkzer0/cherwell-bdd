/* 
 * Cherwell Rest API
 *
 * <a href=\"../../index.html\">Cherwell Rest API Documentation</a><br>Select version options from the header drop-down list (to the left of the Client Key box). Then, click Explore to view different versions of operations.
 *
 * OpenAPI spec version: 9.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ServiceApiTests
    {
        private ServiceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ServiceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ServiceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ServiceApi
            //Assert.IsInstanceOfType(typeof(ServiceApi), instance, "instance is a ServiceApi");
        }

        
        /// <summary>
        /// Test ServiceGetServiceInfoV1
        /// </summary>
        [Test]
        public void ServiceGetServiceInfoV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ServiceGetServiceInfoV1();
            //Assert.IsInstanceOf<ServiceInfoResponse> (response, "response is ServiceInfoResponse");
        }
        
        /// <summary>
        /// Test ServiceLogoutUserV1
        /// </summary>
        [Test]
        public void ServiceLogoutUserV1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ServiceLogoutUserV1();
            
        }
        
        /// <summary>
        /// Test ServiceToken
        /// </summary>
        [Test]
        public void ServiceTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string grantType = null;
            //string clientId = null;
            //string clientSecret = null;
            //string username = null;
            //string password = null;
            //string refreshToken = null;
            //string authMode = null;
            //var response = instance.ServiceToken(grantType, clientId, clientSecret, username, password, refreshToken, authMode);
            //Assert.IsInstanceOf<TokenResponse> (response, "response is TokenResponse");
        }
        
    }

}
