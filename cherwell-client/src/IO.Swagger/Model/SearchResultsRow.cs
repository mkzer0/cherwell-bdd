/* 
 * Cherwell Rest API
 *
 * <a href=\"../../index.html\">Cherwell Rest API Documentation</a><br>Select version options from the header drop-down list (to the left of the Client Key box). Then, click Explore to view different versions of operations.
 *
 * OpenAPI spec version: 9.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// SearchResultsRow
    /// </summary>
    [DataContract]
    public partial class SearchResultsRow :  IEquatable<SearchResultsRow>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchResultsRow" /> class.
        /// </summary>
        /// <param name="BusObId">BusObId.</param>
        /// <param name="BusObRecId">BusObRecId.</param>
        /// <param name="Links">Links.</param>
        /// <param name="PublicId">PublicId.</param>
        /// <param name="RowColor">RowColor.</param>
        /// <param name="SearchResultsFieldValues">SearchResultsFieldValues.</param>
        public SearchResultsRow(string BusObId = default(string), string BusObRecId = default(string), List<Link> Links = default(List<Link>), string PublicId = default(string), string RowColor = default(string), List<FieldTemplateItem> SearchResultsFieldValues = default(List<FieldTemplateItem>))
        {
            this.BusObId = BusObId;
            this.BusObRecId = BusObRecId;
            this.Links = Links;
            this.PublicId = PublicId;
            this.RowColor = RowColor;
            this.SearchResultsFieldValues = SearchResultsFieldValues;
        }
        
        /// <summary>
        /// Gets or Sets BusObId
        /// </summary>
        [DataMember(Name="busObId", EmitDefaultValue=false)]
        public string BusObId { get; set; }

        /// <summary>
        /// Gets or Sets BusObRecId
        /// </summary>
        [DataMember(Name="busObRecId", EmitDefaultValue=false)]
        public string BusObRecId { get; set; }

        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name="links", EmitDefaultValue=false)]
        public List<Link> Links { get; set; }

        /// <summary>
        /// Gets or Sets PublicId
        /// </summary>
        [DataMember(Name="publicId", EmitDefaultValue=false)]
        public string PublicId { get; set; }

        /// <summary>
        /// Gets or Sets RowColor
        /// </summary>
        [DataMember(Name="rowColor", EmitDefaultValue=false)]
        public string RowColor { get; set; }

        /// <summary>
        /// Gets or Sets SearchResultsFieldValues
        /// </summary>
        [DataMember(Name="searchResultsFieldValues", EmitDefaultValue=false)]
        public List<FieldTemplateItem> SearchResultsFieldValues { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SearchResultsRow {\n");
            sb.Append("  BusObId: ").Append(BusObId).Append("\n");
            sb.Append("  BusObRecId: ").Append(BusObRecId).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  PublicId: ").Append(PublicId).Append("\n");
            sb.Append("  RowColor: ").Append(RowColor).Append("\n");
            sb.Append("  SearchResultsFieldValues: ").Append(SearchResultsFieldValues).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SearchResultsRow);
        }

        /// <summary>
        /// Returns true if SearchResultsRow instances are equal
        /// </summary>
        /// <param name="input">Instance of SearchResultsRow to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SearchResultsRow input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.BusObId == input.BusObId ||
                    (this.BusObId != null &&
                    this.BusObId.Equals(input.BusObId))
                ) && 
                (
                    this.BusObRecId == input.BusObRecId ||
                    (this.BusObRecId != null &&
                    this.BusObRecId.Equals(input.BusObRecId))
                ) && 
                (
                    this.Links == input.Links ||
                    this.Links != null &&
                    this.Links.SequenceEqual(input.Links)
                ) && 
                (
                    this.PublicId == input.PublicId ||
                    (this.PublicId != null &&
                    this.PublicId.Equals(input.PublicId))
                ) && 
                (
                    this.RowColor == input.RowColor ||
                    (this.RowColor != null &&
                    this.RowColor.Equals(input.RowColor))
                ) && 
                (
                    this.SearchResultsFieldValues == input.SearchResultsFieldValues ||
                    this.SearchResultsFieldValues != null &&
                    this.SearchResultsFieldValues.SequenceEqual(input.SearchResultsFieldValues)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BusObId != null)
                    hashCode = hashCode * 59 + this.BusObId.GetHashCode();
                if (this.BusObRecId != null)
                    hashCode = hashCode * 59 + this.BusObRecId.GetHashCode();
                if (this.Links != null)
                    hashCode = hashCode * 59 + this.Links.GetHashCode();
                if (this.PublicId != null)
                    hashCode = hashCode * 59 + this.PublicId.GetHashCode();
                if (this.RowColor != null)
                    hashCode = hashCode * 59 + this.RowColor.GetHashCode();
                if (this.SearchResultsFieldValues != null)
                    hashCode = hashCode * 59 + this.SearchResultsFieldValues.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
